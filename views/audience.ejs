<!DOCTYPE html>
<html lang="en" dir="ltr">
  <head>
    <meta charset="utf-8">
    <link rel="stylesheet" href="stylesheets/style.css">
    <title>Nick & Kimberly: Audience</title>

    <script type="text/javascript" src="javascripts/jquery-3.5.1.min.js"></script>
    <script type="text/javascript" src="javascripts/rita.js"></script>

  </head>
  <body onload="loadData()">
    <div class="parent">
      <div id="leftDialogue">
        <div id="leftDia"></div>
        <textarea id="leftInput" name="leftInput" rows="1" cols="45"></textarea>
        <button onclick="sendDialogue('left')" class="sendButton" type="button" name="button">Send</button>
      </div>

      <div id="rightDialogue">
        <div id="rightDia"></div>
        <textarea id="rightInput" name="rightInput" rows="1" cols="45"></textarea> <button onclick="sendDialogue('right')" class="sendButton" type="button" name="button">Send</button>
      </div>
    </div>

    <script type="text/javascript">

      let leftData = [];
      let leftMetaData = [];

      let rightData = [];
      let rightMetaData = [];
      let prevTopics = ['coronavirus'];

      let sentenceStarts = ["Didn't you know that***?", "***", "You should be aware that***.", "You're wrong,***.", "The truth is that***.", "***", "Just admit that***!", "I want you to know that***.", "You will soon admit that***!", "***", "Why won't you just say that***?", "I'm telling you that***!", "Why can't I get you to believe that***?", "Actually,***.", "Well, I heard that***.", "That's idiotic, because***.", "I actually find that really upsetting because***.", "Oh,***.", "OK,***.", "I disagree,***.", "Look now,***."]

      let globalMetadata = [];

      let leftBox = document.getElementById('leftDia');
      let rightBox = document.getElementById('rightDia');

      function loadData() {
        $.getJSON("json/nick.json", function(data) {
          $.each(data.data, function(key, val) {
            leftData.push(val.text);
            leftMetaData.push(val.metadata);
          });

          console.log(leftMetaData.length)
        });

        $.getJSON("json/kimberly.json", function(data) {
          $.each(data.data, function(key, val) {
            rightData.push(val.text);
            rightMetaData.push(val.metadata);
          });
          console.log(rightData.length);
        });

        $.getJSON("json/metadata.json", function(data) {
          $.each(data, function(key, val) {
            for (var i = 0; i < val.length; i++) {
              globalMetadata.push(val[i]);
            }
          });

          console.log(globalMetadata.length);
        });
      }

      function sendDialogue(side) {
        let userInput = document.getElementById(side+'Input').value;
        if (userInput != '') {
          if (side == 'left') {
            leftBox.innerHTML += "<strong>Me:</strong> " + userInput + '<br><br>';
          } else {
            rightBox.innerHTML += "<strong>Me:</strong> " + userInput + '<br><br>';
          }

          document.getElementById(side+'Input').value = '';
          generateResponse(userInput, side);

        } else {
          document.getElementById(side+'Input').value = '';
          generateResponse(userInput, side);
        }


      }

      function generateResponse(input, side) {

        let response;
        let greetings = ['hello', 'hi'];
        let questionResponses = ["Why don't you tell me what you think instead of asking me?", "What do you mean?", "Can you tell me more?", "I'd like to hear what you think.", "Tell me what you mean by that."];

        //add additional responses

        if (side == 'left') {
          if (greetings.includes(input.toLowerCase())) {
            response = "Hi, I'm Nick. Nice to meet you."
          } else if (input.indexOf('?') != -1) {
            var index = Math.floor(Math.random() * questionResponses.length);
            response = questionResponses[index];
          } else {
            //send response
            response = generateMarkov(input, leftData, leftMetaData);
            // response = "Can you tell me more?"
          }
          setTimeout(function() {
            leftBox.innerHTML += "<strong>Nick:</strong> " + response + '<br><br>'
          }, 500);
        } else {
          if (greetings.includes(input.toLowerCase())) {
            response = 'Hello, my name is Kimberly. '
          } else if (input.indexOf('?') != -1) {
            var index = Math.floor(Math.random() * questionResponses.length);
            response = questionResponses[index];
          } else {
            response = generateMarkov(input, rightData, rightMetaData);
            // response = "I'd like to hear more."
          }
          setTimeout(function() {
            rightBox.innerHTML += "<strong>Kimberly:</strong> " + response + '<br><br>';
          }, 500);
        }
      }

      function generateMarkov(text, data, metadata) {

        let topics = [];
        let markov = RiTa.markov(4);

        //parse input for potential topics
        text = text.replace(/[.?!,]/g, '');
        text = text.toLowerCase();
        textTokens = text.split(' ');
        // console.log(inputTokens);

        for (var i = 0; i < textTokens.length; i++) {
          if (globalMetadata.includes(textTokens[i])) {
            if (!topics.includes(textTokens[i])) {
              topics.push(textTokens[i]);
            }
          }
        }
        // console.log(topics);
        if (topics.length <= 0) {
          console.log("no topics!");
          topics = prevTopics;
        }

        // console.log(topics);

        //select left texts
        for (var i = 0; i < metadata.length; i++) {
          for (var j = 0; j < topics.length; j++) {
            if (metadata[i].includes(topics[j])) {
              markov.addText(data[i]);
            }
          }
        }

        //generate markov
        generatedText = markov.generate(1);
        prevTopics = topics;
        // console.log(prevTopics);
        var index = Math.floor(Math.random() * sentenceStarts.length);
        console.log(sentenceStarts[index]);

        //make first letter of the markov toLowerCase
        //remove any punctuation at end

        let toSend = sentenceStarts[index].replace('***', ' ' + generatedText[0]);

        return(toSend);
      }

    </script>

  </body>
